import numpy as np
from Bio import Align
from Bio.Seq import Seq
import pandas as pd
import time
import multiprocessing as mp

project_root = os.getcwd()
result_path = os.path.join(project_root, 'output/')

# step6: create the control sequence library for alignment
fp_1 = "ATGGTgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgaggggcgagggcgagggcgatgccaccaacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgagccacggcgtgcagtgcttcgcccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcacctacaagacccgcgccgaggtgaagttcgagggcgacaccctagtgaaccgcatcgagctgaagggcgtcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaacttcaacagccacaacatctatatcatggccgtcaagcagaagaacggcatcaaggtgaacttcaagatccgccacaacgtggaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacagccactacctgagcacccagtccgtgctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttccgcaccgccgccgggatcactctcgGCATGGACGAGCTGTACAAG"
fp_2 = "ATGGTgtctaagggcgaagagctgattaaggagaacatgcacatgaagctgtacatggagggcaccgtggacaaccatcacttcaagtgcacatccgagggcgaaggcaagccctacgagggcacccagaccatgagaatcaaggtggtcgagggcggccctctccccttcgccttcgacatcctggctactagcttcctctacggcagcaagaccttcatcaaccacacccagggcatccccgacttcttcaagcagtccttccctgagggcttcacatgggagagagtcaccacatacgaagatgggggcgtgctgaccgctacccaggacaccagcctccaggacggctgcctcatctacaacgtcaagatcagaggggtgaacttcacatccaacggccctgtgatgcagaagaaaacactcggctgggaggccttcaccgagacactgtaccccgctgacggcggcctggaaggcagaaacgacatggccctgaagctcgtgggcgggagccatctgatcgcaaacgccaagaccacatatagatccaagaaacccgctaagaacctcaagatgcctggcgtctactatgtggactacagactggaaagaatcaaggaggccaacaacgagacatacgtcgagcagcacgaggtggcagtggccagatactgcgacctccctagcaaactggggcacaagcttaat"
fp_3 = "ATGGTgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccttctcctacggcgtgatggtgttcgcccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaacttcaacagccacaacgtctatatcatggccgacaagcagaagaacggcatcaaggccaacttcaagatccgccacaacatcgaggacggcggcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagcatccagtccaagctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctggGCATGGACGAGCTGTACAAG"
fp_4 = "ATGGTgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgcgcggcgagggcgagggcgatgccaccaacggcaagctgaccctgaagttcatctgcacctccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgtcttacggcgtgcagtgcttcgcccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatctccttcaaggacgacggcagctacaggacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaacatgaacgtgtgggacgcgtatatcacggccgacaagcagaagaacggcatcaaagcgaacttcaagatcgagcacaacgtcgaggacggcggcgtgcagctcgccgacgcgtaccagcagaacacccccatcggcgacggctccgtgctgctgcctgacaaccactacctgagcttccagagcaagctgttcaaagaccccaacgagcagcgcgatcacatggtcctgctggagttcgttaccgccgccgggatcactcccgGCATGGACGAGCTGTACAAG"
fp_5 = "ATGGTGAGCAAGGGCGAGGAGctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgagctggggcgtgcagtgcttcgcccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaacgccatccacggcaacgtctatatcaccgccgacaagcagaagaacggcatcaaggccaacttcggcctcaactgcaacatcgaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagcacccagtccaagctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctcgGCATGGACGAGCTGTACAAG"
fp_6 = "ATGGTgagcaagggcgaggagaataacatggccatcatcaaggagttcatgcgcttcaaggtgcgcatggagggctccgtgaacggccacgagttcgagatcgagggcgagggcgagggccgcccctacgagggctttcagaccgttaagctgaaggttaccaagggtggaccactgcctttcgcctgggacatattgtcacctcagttcacctacggctccaaggcctacgtgaagcaccccgccgacatccccgactacctcaagctgtccttccccgagggcttcaagtgggagcgcgtgatgaacttcgaggatggcggcgtggtgaccgtgactcaggactcctccctgcaggacggcgagttcatctacaaggtgaagctgcgcggcaccaacttcccctccgacggacccgtaatgcagaagaaaaccatgggcatggaagcctcatctgaacggatgtaccccgaggacggcgcactgaagggcgaggacaagctcaggctgaagctgaaggacggcggccactacacctccgaggtcaagaccacctacaaggccaagaagcccgtgcagttgccaggcgcctacatcgtcgacatcaagttggacatcacctcacacaacgaggactacaccatcgtggaacagtacgaacgcgccgagggccgccactccaccggcgGCATGGACGAGCTGTACAAG"
fp_7 = "ATGGTgtctaagggcgaagagctgattaaggagaacatgcatatgaagctgtacatggagggcaccgtgaacaaccaccacttcaagtgcacatccgagggcgaaggcaagccctacgagggcacccagaccatgagaatcaaggtggtcgagggcggccctctccccttcgccttcgacatcctggctaccagcttcatgtacggcagcaaaaccttcatcaaccacacccagggcatccccgacttctttaagcagtccttccctgagggcttcacatgggagagatccaccacatacgaggacgggggcgtgctgaccgctacccaggacaccagcctccaggacggctgcctcatctacaacgtcaagatcagaggggtgaacttcccatccaacggccctgtgatgcagaagaaaacactcggttgggaagcctccacagagatgctgtacccagctgacggaggtctggaaggaagagactacatggctctgaagctcgtgggcgggggccacctgatctgcaacgccaagaccacatacagatccaagaaacccgctaagaacctcaagatgcccggcgtctactatgtggacaggagactggaaagaatcaaggaggccgacaaagagacaagcgtcgagcagcacgaggtggctgtggccagatactgcgacctccctagcaaactggggcacaaa"
fp_8 = "atggtgagcaagggcgaggagactacaatgggcgtaatcaagcccgacatgaagatcaagctgaagatggagggcaacgtgaatggccacgccttcgtgatcgagggcgagggcgagggcaagccctacgacggcaccaacaccatcaacctggaggtgaaggagggagcccccctgcccttctcctacgacattctgaccaccgcgttcgcctacggcaacagggccttcaccaagtaccccgacgacatccccaactacttcaagcagtccttccccgagggctactcttgggagcgcaccatgaccttcgaggacaagggcatcgtgaaggtgaagtccgacatctccatggaggaggactccttcatctacgagatacacctcaagggcgagaacttcccccccaacggccccgtgatgcagaagaaaaccaccggctgggacgcctccaccgagaggatgtacgtgcgcgacggcgtgctgaagggcgacgtcaagcacaagctgctgctggagggcggcggccaccaccgcgttgacttcaagaccatctacagggccaagaaggcggtgaagctgcccgactatcactttgtggaccaccgcatcgagatcctgaaccacgacaaggactacaacaaggtgaccgtttacgagagcgccgtggcccgcaactccaccgacggcatggacgagctgtacaag"
fp_9 = "atggtgagcaagggcgaggaGctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgacctacggcgtgcagtgcttcagccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaactacaacagccacaacgtctatatcatggccgacaagcagaagaacggcatcaaggtgaacttcaagatccgccacaacatcgaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagcacccagtccaagctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctcgGCATGGACGAGCTGTACAAG"
fp_10 = "ATGGTgagcaagggcgaggagctgatcaaggagaacatgagaagcaagctgtacctggaaggcagcgtgaacggccaccagttcaagtgcacccacgaaggggagggcaagccctacgagggcaagcagaccaacaggatcaaggtggtggagggaggccccctgccgttcgcattcgacatcctggccacccactttatgtacgggagcaaggtgttcatcaagtaccccgccgacctccccgattattttaagcagtccttccctgagggcttcacatgggagagagtcatggtgttcgaggacgggggcgtgctgaccgccacccaggacaccagcctccaggacggcgagctcatctacaacgtcaaggtcagaggggtgaacttcccagccaacggccccgtgatgcagaagaaaacactgggctgggaaccaagcaccgaaaccatgtacccagctgacggaggtctggaaggaagatgcgacaaggccctgaagctcgtgggaggtggacacttacacgtcaacttcaagaccacatacaagtccaagaaacccgtgaagatgcccggcgtccactacgtggaccgcagactggaaagaatcaaggaggccgacaacgagacttacgtcgagcagtacgagcacgctgtggccagatactccaacctgggtggagGCATGGACGAGCTGTACAAG"
fp_11 = "atggtgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtccgcggcgagggcgagggcgatgccaccaacggcaagctgaccctgaagttcatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccttcggctacggcgtggcctgcttcagccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatctctttcaaggacgacggtacctacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaacttcaacagccactacgtctatatcacggccgacaagcagaagaactgcatcaaggctaacttcaagatccgccacaacgttgaggacggcagcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagccatcagtccaagctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggattacacatgGCATGGACGAGCTGTACAAG"
fp_12 = "atggtgagcaagggcgaggagctgttcaccggggtggtgcccatcctggtcgagctggacggcgacgtaaacggccacaagttcagcgtgtccggcgagggcgagggcgatgccacctacggcaagctgaccctgaagctgatctgcaccaccggcaagctgcccgtgccctggcccaccctcgtgaccaccctgggctacggcctgcagtgcttcgcccgctaccccgaccacatgaagcagcacgacttcttcaagtccgccatgcccgaaggctacgtccaggagcgcaccatcttcttcaaggacgacggcaactacaagacccgcgccgaggtgaagttcgagggcgacaccctggtgaaccgcatcgagctgaagggcatcgacttcaaggaggacggcaacatcctggggcacaagctggagtacaactacaacagccacaacgtctatatcaccgccgacaagcagaagaacggcatcaaggccaacttcaagatccgccacaacatcgaggacggcggcgtgcagctcgccgaccactaccagcagaacacccccatcggcgacggccccgtgctgctgcccgacaaccactacctgagctaccagtccaagctgagcaaagaccccaacgagaagcgcgatcacatggtcctgctggagttcgtgaccgccgccgggatcactctcggcatggacgagctctacaag"
fp_13 = "ATGGTgagcaagggcgaggggCAATCGAAGCATGGACTAAAGGAGGAGATGACGGTGAAGTACCACATGGAAGGTTGCGTTAATGGTCACAAATTTGTCATTACTGGAGAGGGCATTGGAAACCCTTTTAAGGGTAAGCAAACCGCAAATTTGTGTGTGATAGAAGGAGGCCCGCTGCCGTTCTCGGAGGACATTTTAAGTCCGGGTTTTAAATATGGTGACCGGATTTTCACAGAGTACCCACAGGATATTGTAGATTACTTCAAGAACTCATGTCCAGCGGGCTATACGTGGGAAAGGAGCTACCTCTTTGAGGACGGAGCGGTCTGTCGATGCAACGTGGACATAACAGTCTCTGAAAAGGAGAACTGCATCTATCACAAAAGTATCTTCAGAGGGGTGAATTTTCCCGCCGACGGCCCCGTAATGAAGAAAATGACCACTAATTGGGAAGCTAGTACCGAGAAAATTGTGCCTGTTCCAAAGCAAGGGATATTAAAGGGAAAGGTCAAAATGTGCCTGTTGCTGAAGGATGGCGGTCGTTATCATTGCCAGTTTGATACGGTATATAAAGCTAAATCAGTGCCCTCCAAGATGCCAGAATGGCATTTTATACAGCATAAGCTCCTTAGGGAGGACCGCTCTGATGCTAAAAACCAGAAATGGCAATTAACAGAACATGCAATCGCAGGCATGGACGAGCTGTACAAG"
fp_14 = "ATGGTgagcaagggcgaggagaataacatggccatcatcaaggagttcatgcgcttcaaggtgcgcatggagggctccgtgaacggccacgagttcgagatcgagggcgagggcgagggccgcccctacgagggctttcagaccgctaagctgaaggtgaccaagggtggccccctgcccttcgcctgggacatcctgtcccctcatttcacctacggctccaaggcctacgtgaagcaccccgccgacatccccgactacttcaagctgtccttccccgagggcttcaagtgggagcgcgtgatgaactacgaggacggcggcgtggtgaccgtgacccaggactcctccctgcaggacggcgagttcatctacaaggtgaagctgcgcggcaccaacttcccctccgacggccccgtgatgcagaagaaaaccatgggctgggaggcctcctccgagcggatgtaccccgaggacggtgccctgaagggcaagatcaagatgaggctgaagctgaaggacggcggccactacacctccgaggtcaagaccacctacaaggccaagaagcccgtgcagctgcccggcgcctacatcgtcgacatcaagttggacatcacctcccacaacgaggactacaccatcgtggaacagtacgaacgcgccgagggccgccactccaccggcgGCATGGACGAGCTGTACAAG"
fp_15 = "atggtgtctaagggcgaagagctgatcaaggaaaatatgcgtatgaaggtggtcatggaaggttcggtcaacggccaccaattcaaatgcacaggtgaaggagaaggcagaccgtacgagggagtgcaaaccatgaggatcaaagtcatcgagggaggacccctgccatttgcctttgacattcttgccacgtcgttcatgtatggcagccgtacctttatcaagtacccggccgacatccctgatttctttaaacagtcctttcctgagggttttacttgggaaagagttacgagatacgaagatggtggagtcgtcaccgtcacgcaggacaccagccttgaggatggcgagctcgtctacaacgtcaaggtcagaggggtaaactttccctccaatggtcccgtgatgcagaagaaaaccaagggttgggagcctaatacagagatgatgtatccagcagatggtggtctgagaggatacactgacatcgcactgaaagttgatggtggtggccatctgcactgcaacttcgtgacaacttacaggtcaaaaaagaccgtcgggaacatcaagatgcccggtgtccatgccgttgatcaccgcctggaaaggatcgaggagagtgacaatgaaacctacgtagtgcaaagagaagtggcagttgccaaatacagcaaccttggtggtgGCATGGACGAGCTGTACAAG"
fp_16 = "ATGGTgagcgagctgattaaggagaacatgcacatgaagctgtacatggagggcaccgtgaacaaccaccacttcaagtgcacatccgagggcgaaggcaagccctacgagggcacccagaccatgagaatcaaggcggtcgagggcggccctctccccttcgccttcgacatcctggctaccagcttcatgtacggcagcaaaaccttcatcaaccacacccagggcatccccgacttctttaagcagtccttccccgagggcttcacatgggagagagtcaccacatacgaagatgggggcgtgctgaccgctacccaggacaccagcctccaggacggctgcctcatctacaacgtcaagatcagaggggtgaacttcccatccaacggccctgtgatgcagaagaaaacactcggctgggaggcctccaccgagacactgtaccccgctgacggcggcctggaaggcagagccgacatggccctgaagctcgtgggcgggggccacctgatctgcaacttaaagaccacatacagatccaagaaacccgctaagaacctcaagatgcccggcgtctactatgtggacagaaggctggaaagaatcaaggaggccgacaaagagacttacgtcgagcagcacgaggtggctgtggccagatactgcgacctccctagcaaactggggcacaga"
fp_17 = "ATGGTgagcaagggcgaggagctgatcaaggagaacatgcacatgaagctgtacatggaaggcaccgtgaacaaccaccacttcaagtgcaccaccgaaggggagggcaagccctacgagggcacccagacccagaggattaaggtggtggagggaggccccctgccgttcgcattcgacatcctggccacctgctttatgtacgggagcaagaccttcatcaaccacacccagggcatccccgatttctttaagcagtccttccctgagggcttcacatgggagagagtcaccacatacgaggacgggggcgtgcttaccgttacccaggacaccagcctccaggacggctgcttgatctacaacgtcaagctcagaggggtgaacttcccatccaacggccctgtgatgcagaagaaaacactcggctgggaggccaccaccgagactctgtaccccgctgacggcggcctggaaggcagatgcgacatggccctgaagctcgtgggcgggggccacctgcactgcaaccttaagaccacatacagatccaagaaacccgctaagaacctcaagatgcccggcgtctactttgtggaccgcagactggaaagaatcaaggaggccgacaatgagacatacgtcgagcagcacgaggtggctgtggccagatactgcgacctccctagcaaactggggcacaaacttaatgGCATGGACGAGCTGTACAAG"
fp_18 = "ATGGTagcaggtcatgcctctggcagccccgcattcgggaccgcctctcattcgaattgcgaacatgaagagatccacctcgccggctcgatccagccgcatggcgcgcttctggtcgtcagcgaacatgatcatcgcgtcatccaggccagcgccaacgccgcggaatttctgaatctcggaagcgtactcggcgttccgctcgccgagatcgacggcgatctgttgatcaagatcctgccgcatctcgatcccaccgccgaaggcatgccggtcgcggtgcgctgccggatcggcaatccctctacggagtactgcggtctgatgcatcggcctccggaaggcgggctgatcatcgaactcgaacgtgccggcccgtcgatcgatctgtcaggcacgctggcgccggcgctggagcggatccgcacggcgggttcactgcgcgcgctgtgcgatgacaccgtgctgctgtttcagcagtgcaccggctacgaccgggtgatggtgtatcgtttcgatgagcaaggccacggcctggtattctccgagtgccatgtgcctgggctcgaatcctatttcggcaaccgctatccgtcgtcgactgtcccgcagatggcgcggcagctgtacgtgcggcagcgcgtccgcgtgctggtcgacgtcacctatcagccggtgccgctggagccgcggctgtcgccgctgaccgggcgcgatctcgacatgtcgggctgcttcctgcgctcgatgtcgccgtgccatctgcagttcctgaaggacatgggcgtgcgcgccaccctggcggtgtcgctggtggtcggcggcaagctgtggggcctggttgtctgtcaccattatctgccgcgcttcatccgtttcgagctgcgggcgatctgcaaacggctcgccgaaaggatcgcgacgcggatcaccgcgcttgagagc"

NheI_cmv_kozak = "CTAGCcgttacataacttacggtaaatggcccgcctggctgaccgcccaacgacccccgcccattgacgtcaataatgacgtatgttcccatagtaacgccaatagggactttccattgacgtcaatgggtggagtatttacggtaaactgcccacttggcagtacatcaagtgtatcatatgccaagtacgccccctattgacgtcaatgacggtaaatggcccgcctggcattatgcccagtacatgaccttatgggactttcctacttggcagtacatctacgtattagtcatcgctattaccatgGTGATGCGGTTTTGGCAGTACATCAATGGGCGTGGATAGCGGTTTGACTCACGGGGATTTCCAAGTCTCCACCCCATTGACGTCAATGGGAGTTTGTTTTGGCACCAAAATCAACGGGACTTTCCAAAATGTCGTAACAACTCCGCCCCATTGACGCAAATGGGCGGTAGGCGTGTACGGTGGGAGGTCTATATAAGCAGAGCTACCGCTGATCAGCCTCGTGCttactggcttatcgaaatgGATCCGCCGCCACC"
tPT2A_kozak = "GGcTCCggcgccacaaacttctctctgctaaagcaagcaggtgatgttgaagaaaaccccgggcctggcagcggcgagggcaggggaagtctacttacatgcggggacgtggaggaaaatcccggcccaGGATCCGCCGCCACC"
tail_MfpI = "TAAACTGTATGATTCTAGATAATGaattctgaaacataaaatgaatgcaatt" # optional

fp = []
for i in range(1, 19):
    name = "fp_"+str(i)
    fp.append(eval(name))  # change the str "fp_1" to variable fp_1
    fp[i-1] = fp[i-1].upper()

cmv_fp = []  # list "cmv_fp" contains NheI-CMV-BamHI-Kozak-ATG-fp
for i in range(len(fp)):
    sequence = NheI_cmv_kozak.upper() + fp[i]
    cmv_fp.append(sequence)

cmv_music = [] # list "cmv_music" contains NheI-cmv-BamHI-kozak-fpm-tPT2A-fpn-MfeI
for each_seq in cmv_fp:
    for i in range(len(fp)):
        music_seq = each_seq + tPT2A_kozak.upper() + fp[i]
        cmv_music.append(music_seq)

cmv_music = np.array(cmv_music)
np.save(result_path + 'Step2.cmv_music.npy', cmv_music)

# step7: align and score to cmv_music to minimize the global scoring errors
final_good_read_pool = np.load(result_path + 'Step1_good_alignment_pool.npy')

aligner = Align.PairwiseAligner()
aligner.mode = "global"


def scoring(task_list):
    result = []
    music_score_list = []
    print("start to analyze pMuSIC sample in this sublist: ")
    print("the length of total sequences in the sublist is ", len(task_list))
    start_time = time.time()
    readable_start_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(start_time))
    print(f"start_time of this sub_list: {readable_start_time}")
    for each_seq in task_list:
        score_list = []
        for each_ctrl in cmv_music:
            each_score = aligner.score(Seq(each_seq[:-2]), Seq(each_ctrl))
            score_list.append(each_score)
        music_score_list.append(score_list)

    result = np.array(music_score_list)
    print('the scoring results for sublist: ')
    print('the length of result is ', len(result))

    end_time = time.time()
    readable_end_time = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(end_time))
    print(f"end_time of this sub_list: {readable_end_time}")
    return result


if __name__ == '__main__':
    print("Test the Control Sequence Library for Alignment:")
    print("the length of fp1 is " + str(len(fp[0])))
    print("the sequence of fp1 is:")
    print(fp[0])
    print("the length of list fp is " + str(len(fp)))
    print("the length of NheI-cmv-BamHI-kozak-fpm is:")
    print(len(cmv_fp[0]))
    print("the length of NheI-cmv-BamHI-kozak-fpm-tPT2A-fpn-MfeI is:")
    print(len(cmv_music[0]))
    print("the length of the control sequence library is:")
    print(len(cmv_music))

    print("Align Each pMuSIC Read in Each Sample Group to the Control Sequence Library:")

    start = time.perf_counter()
    num_cores = int(mp.cpu_count())

    # divide the final_good_read_pool into num_cores of sublist.
    total_length = len(final_good_read_pool)
    sublist_length = total_length // num_cores

    task_sublists = []
    for i in range(num_cores - 1):
        sublist = final_good_read_pool[i * sublist_length : (i + 1) * sublist_length]
        task_sublists.append(sublist)

    # Add the last sublist with the remaining sequences to the task_sublists
    last_sublist = final_good_read_pool[(num_cores - 1) * sublist_length:]
    task_sublists.append(last_sublist)

    with mp.Pool(processes=num_cores) as pool:
        results = pool.map(scoring, task_sublists)

    # Merge the results into the final result list: score_of_read，the elements in final_results will correspond to the
    # original elements in final_good_read_pool, and the order will be preserved.
    score_of_read = np.concatenate(results, axis=0)
    print('the length of the scoring result is:', len(score_of_read))
    np.save(result_path + "Step2.score_of_read.npy", score_of_read)
    print("now you have score_of_read stored!")

